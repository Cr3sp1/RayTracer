float angle(0)
camera(perspective, rotation_z(angle) * translation([-1, 0, 1]), 1.5, 1)


material sky_material(
    diffuse(uniform(<0, 0, 0>)),
    uniform(<0.87, 1, 1>)
)


material ground_material(
    diffuse(checkered(<0., 1, 0.>, <0.2, 0.2, 0.2>, 4)),
    uniform(<0, 0, 0>)
)

material mirror_material(
    specular(uniform(<0.5, 0.5, 0.5>)),
    uniform(<0, 0, 0>)
)

material striped1_material(
    diffuse(striped(<1., 0, 0.>, <0.2, 0.2, 0.8>, 15, horizontal)),
    uniform(<0, 0, 0>)
)

material striped2_material(
    diffuse(striped(<1., 1, 0.>, <1, 0.2, 0.8>, 8, vertical)),
    uniform(<0, 0, 0>)
)

shape cubeA( cube (striped2_material, identity))
shape cylinderA( cylinder (mirror_material, identity))
float radB(1.3)
shape sphereB( sphere(striped1_material, scaling([radB, radB, radB])))
shape sphereC( sphere (striped1_material, translation([0., 0, -0.6]) * scaling([1.2, 1.2, 1.2])))

sphere (sky_material, scaling([50, 50, 50]))
plane (ground_material, identity)

cylinder (striped1_material, translation([1.5, -3., 1.5]) * rotation_y(50) * scaling([0.5, 0.5, 1]))
cylinder (striped2_material, translation([1.5, -1., 1.5]) * rotation_y(50) * scaling([0.5, 0.5, 1]))
cylinder (ground_material, translation([1.5, 1, 1.5]) * rotation_y(50) * scaling([0.5, 0.5, 1]))
cylinder (mirror_material, translation([1.5, 3, 1.5]) * rotation_y(50) * scaling([0.5, 0.5, 1]))
cube ([striped1_material, mirror_material, striped2_material],  
    translation([1.5, 0, 3]) * scaling([0.4, 0.4, 0.4]) * rotation_y(-60) * rotation_z(135))
# csg ( cubeA, sphereB, difference, translation([1., 1.5, 1]))
# csg (cylinderA, sphereC, intersection, translation([1.5, -1.5, 1.8]) )